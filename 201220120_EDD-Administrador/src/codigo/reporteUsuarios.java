/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileWriter;
import java.util.StringTokenizer;
import javax.swing.ImageIcon;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.WindowConstants;

import java.io.FileOutputStream;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.Font;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author Braian
 */
public class reporteUsuarios extends javax.swing.JFrame {

    /**
     * Creates new form Vuelos
     */
    VentanaPrincipal menu;

    public reporteUsuarios() {
        initComponents();
        datosVentana();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/icon.png")).getImage());

        setResizable(false);
        menu = new VentanaPrincipal();
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {

                setDefaultCloseOperation(
                        WindowConstants.DISPOSE_ON_CLOSE);
                setVisible(false);
                dispose();
                menu.setVisible(true);

            }
        });
        setLocationRelativeTo(null);
        setTitle("Menu - Reporte Usuarios");
    }
    String usuarios;

    public void datosVentana() {
        lblError.setText("");
        panelUsuarios.setContentType("text/html");
        String url = "http://127.0.0.1:5000/get_vuelos";
        String res = crearConexion.crearConexion(url, "HTTP");

        StringTokenizer tokens = new StringTokenizer(res, ",");
        while (tokens.hasMoreTokens()) {
            String a = tokens.nextToken();
            boxVuelos.addItem(a);
        }
        boxVuelos.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String id = boxVuelos.getSelectedItem().toString();

                if (id != "(Seleccione un Vuelo)") {
                    try {

                        String url = "http://127.0.0.1:5000/get_usuariosVuelo/" + id;
                        String res = crearConexion.crearConexion(url, "HTTP");
                        boxUsuarios.removeAllItems();
                        boxUsuarios.addItem("(Seleccione un Usuario)");
                        usuarios = res;
                        StringTokenizer tokens = new StringTokenizer(res, ",");
                        while (tokens.hasMoreTokens()) {
                            String a = tokens.nextToken();
                            boxUsuarios.addItem(a);
                        }
                        boxUsuarios.addItem("Ver todos");
                    } catch (Exception ex) {
                        showMessageDialog(null, "Seleccione un vuelo primero");
                    }

                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelGrapviz = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        boxVuelos = new javax.swing.JComboBox();
        btnComprobar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelUsuarios = new javax.swing.JTextPane();
        lblError = new javax.swing.JLabel();
        boxUsuarios = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        btnExportarPDF = new javax.swing.JButton();
        btnComprobar3 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbltitulo.setFont(new java.awt.Font("Elected Office", 0, 22)); // NOI18N
        lbltitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitulo.setText("Bienvenido, ingrese la informaci√≥n necesaria");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Grafica - Grapviz"));

        jScrollPane3.setViewportView(panelGrapviz);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios - Vuelos Asignados"));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel1.setText("Seleccione un vuelo::");

        boxVuelos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "(Seleccione un Vuelo)" }));
        boxVuelos.setPreferredSize(new java.awt.Dimension(150, 20));

        btnComprobar.setText("BUSCAR");
        btnComprobar.setPreferredSize(new java.awt.Dimension(150, 20));
        btnComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(panelUsuarios);

        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setText("Por favor escoja un Usuario");
        lblError.setPreferredSize(new java.awt.Dimension(25, 25));

        boxUsuarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "(Seleccione un Usuario)" }));
        boxUsuarios.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel2.setText("Seleccione un usuario:");

        btnExportarPDF.setText("EXPORTAR PDF");
        btnExportarPDF.setBorderPainted(false);
        btnExportarPDF.setPreferredSize(new java.awt.Dimension(150, 20));
        btnExportarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarPDFActionPerformed(evt);
            }
        });

        btnComprobar3.setText("REGRESAR A MENU PRINCIPAL");
        btnComprobar3.setPreferredSize(new java.awt.Dimension(150, 20));
        btnComprobar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprobar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(87, 87, 87))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(95, 95, 95)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(boxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxVuelos, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnComprobar3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExportarPDF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnComprobar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(38, 38, 38)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(boxVuelos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(boxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComprobar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnComprobar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbltitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String cadenaPDF = "";
    boolean control = false;
    String patch = "";
    String nom = "";
    private void btnComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobarActionPerformed

        lblError.setText("");
        try {
            panelGrapviz.setText("");
            String id = boxUsuarios.getSelectedItem().toString();
            if (id != "(Seleccione un Usuario)") {
                try {
                    if (!boxUsuarios.getSelectedItem().toString().equals("Ver todos")) {

                        String url = "http://127.0.0.1:5000/get_userDatos/" + id + "/0";
                        String res = crearConexion.crearConexion(url, "HTTP");
                        cadenaPDF = res;
                        panelUsuarios.setText(res);
                        panelGrapviz.setCaretPosition(panelGrapviz.getStyledDocument().getLength());

                        FileWriter fichero;
                        //PrintWriter pw;
                        fichero = new FileWriter("D:\\nodoUsuarios.txt");
                        patch = "D:\\nodoUsuarios.txt";
                        nom = "nodoUsuarios";

                        String url3 = "http://127.0.0.1:5000/dibujar_arbolUsuarios";
                        String res3 = crearConexion.crearConexion(url3, "HTTP");

                        System.out.println(res3);

                        fichero.write("graph G {" + "\n"
                                + " node [fontsize=10,width=\".2\", height=\".2\", margin=0];"
                                + "node [shape=rectangle];");

                        fichero.write(res3);
                        fichero.write("}");

                        fichero.close();

                        crearImagen(patch, nom);
                        control = true;
                        JOptionPane.showMessageDialog(null, "Grafica creada exitosamente");

                        ImageIcon icono = new ImageIcon("D:/" + nom + ".jpg");
                        panelGrapviz.insertIcon(icono);

                    } else {
                        int cont = boxUsuarios.getItemCount();
                        if (cont > 1) {
                            String contenido = "";
                            StringTokenizer tokens = new StringTokenizer(usuarios, ",");
                            while (tokens.hasMoreTokens()) {
                                String a = tokens.nextToken();
                                String url = "http://127.0.0.1:5000/get_userDatos/" + a + "/1";
                                String res = crearConexion.crearConexion(url, "HTTP");
                                contenido = contenido + res;
                            }
                            control = true;
                            panelUsuarios.setText(contenido);

                            panelGrapviz.setCaretPosition(panelGrapviz.getStyledDocument().getLength());

                            FileWriter fichero;
                            //PrintWriter pw;
                            fichero = new FileWriter("D:\\nodoUsuarios.txt");
                            patch = "D:\\nodoUsuarios.txt";
                            nom = "nodoUsuarios";

                            String url3 = "http://127.0.0.1:5000/dibujar_arbolUsuarios";
                            String res3 = crearConexion.crearConexion(url3, "HTTP");

                            System.out.println(res3);

                            fichero.write("graph G {" + "\n"
                                    + " node [fontsize=10,width=\".2\", height=\".2\", margin=0];"
                                    + "node [shape=rectangle];");

                            fichero.write(res3);
                            fichero.write("}");

                            fichero.close();

                            crearImagen(patch, nom);
                            control = true;
                            JOptionPane.showMessageDialog(null, "Grafica creada exitosamente");

                            ImageIcon icono = new ImageIcon("D:/" + nom + ".jpg");
                            panelGrapviz.insertIcon(icono);
                        }

                    }

                } catch (Exception e) {
                    showMessageDialog(null, "Seleccione un usuario");
                }
            } else {
                lblError.setText("Por favor escoja un Usuario");
            }

        } catch (Exception e) {
            lblError.setText("Ha ocurrido un error");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnComprobarActionPerformed
    public void crearImagen(String patch, String nom) {
        try {

            String dotPath = "C:\\Program Files (x86)\\Graphviz2.38\\bin\\dot.exe";

            String fileInputPath = patch;
            String fileOutputPath = "D:\\" + nom + ".jpg";
            System.out.println(fileInputPath);
            System.out.println(fileOutputPath);

            String tParam = "-Tjpg";
            String tOParam = "-o";

            String[] cmd = new String[5];
            cmd[0] = dotPath;
            cmd[1] = tParam;
            cmd[2] = fileInputPath;
            cmd[3] = tOParam;
            cmd[4] = fileOutputPath;

            Runtime rt = Runtime.getRuntime();
            //  System.out.println(tParam.charAt(0) + "pepepepepepepepepepe");
            rt.exec(cmd);

        } catch (Exception ex) {
            System.out.println("erorororororor");
            ex.printStackTrace();

        } finally {

        }

    }
    private void btnExportarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarPDFActionPerformed
        try {
            if (control) {
                FileOutputStream archivo = new FileOutputStream("D:\\ReporteUsuarios.pdf");
                Document documento = new Document();
                PdfWriter.getInstance(documento, archivo);
                PdfPTable table = new PdfPTable(7);

                table.addCell("Nombre");
                table.addCell("Password");
                table.addCell("User");

                table.addCell("Direcci√≥n");
                table.addCell("Telefono");
                table.addCell("Tarjeta Cr√©dito");

                table.addCell("Direcion Actual");
                if (!boxUsuarios.getSelectedItem().toString().equals("Ver todos")) {
                    String id = boxUsuarios.getSelectedItem().toString();
                    String url = "http://127.0.0.1:5000/get_userDatosPDF/" + id + "/0";
                    String res = crearConexion.crearConexion(url, "HTTP");
                    StringTokenizer tokens = new StringTokenizer(res, ",");
                    while (tokens.hasMoreTokens()) {
                        String a = tokens.nextToken();
                        table.addCell(a);
                    }

                    documento.open();
                    Paragraph parrafo = new Paragraph();
                    parrafo.setAlignment(Paragraph.ALIGN_CENTER);
                    parrafo.setFont(FontFactory.getFont("Sans", 20, Font.BOLD, BaseColor.BLUE));
                    parrafo.add("Reporte de Usuarios\n");
                    documento.add(parrafo);
                    documento.add(new Paragraph("\n\n"));
                    documento.add(table);
                    documento.close();
                } else {

                    StringTokenizer tokens = new StringTokenizer(usuarios, ",");
                    while (tokens.hasMoreTokens()) {
                        String a = tokens.nextToken();
                        String url = "http://127.0.0.1:5000/get_userDatosPDF/" + a + "/0";
                        String res = crearConexion.crearConexion(url, "HTTP");
                        StringTokenizer token = new StringTokenizer(res, ",");
                        while (token.hasMoreTokens()) {
                            String r = token.nextToken();
                            table.addCell(r);
                        }

                    }
                    documento.open();
                    documento.add(table);
                    documento.close();
                    lblError.setText("Reporte Creado");
                    File file = new File("D:\\ReporteUsuarios.pdf");
                    Desktop.getDesktop().open(file);

                }
            } else {
                lblError.setText("Primero debe realizar una busqueda");
            }

        } catch (Exception e) {
            e.printStackTrace();
            lblError.setText("Ocurri√≥ un error");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarPDFActionPerformed

    private void btnComprobar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprobar3ActionPerformed
        setVisible(false);
        dispose();
        menu.setVisible(true);           // TODO add your handling code here:
    }//GEN-LAST:event_btnComprobar3ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxUsuarios;
    private javax.swing.JComboBox boxVuelos;
    private javax.swing.JButton btnComprobar;
    private javax.swing.JButton btnComprobar3;
    private javax.swing.JButton btnExportarPDF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JTextPane panelGrapviz;
    private javax.swing.JTextPane panelUsuarios;
    // End of variables declaration//GEN-END:variables
}
